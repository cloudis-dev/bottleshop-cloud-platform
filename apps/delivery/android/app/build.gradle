def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
  flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
  flutterVersionName = '1.0'
}

def _compileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')
if (_compileSdkVersion == null) {
  _compileSdkVersion = 33
}

def _minSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (_minSdkVersion == null) {
  _minSdkVersion = 26
}

def _targetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')
if (_targetSdkVersion == null) {
  _targetSdkVersion = 33
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}  else {
    keystoreProperties.setProperty('storePassword', System.getenv('STORE_PWD'))
    keystoreProperties.setProperty('keyAlias', System.getenv('KEY_ALIAS'))
    keystoreProperties.setProperty('keyPassword', System.getenv('STORE_PWD'))
    keystoreProperties.setProperty('storeFile', System.getenv('STORE_PATH'))
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion _compileSdkVersion.toInteger()

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
      jvmTarget = '1.8'
    }

     sourceSets {
       main.java.srcDirs += 'src/main/kotlin'
     }

    defaultConfig {
      applicationId "sk.bottleshop3veze.bottleshopdeliveryapp"
      minSdkVersion _minSdkVersion.toInteger()
      targetSdkVersion _targetSdkVersion.toInteger()
      versionCode flutterVersionCode.toInteger()
      versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
            keyPassword keystoreProperties['keyPassword']
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "app"

    productFlavors {
      production {
        dimension "app"
        resValue "string", "app_name", "Bottleshop 3 Veže"
      }
      development {
        dimension "app"
        resValue "string", "app_name", "[DEV] Bottleshop 3 Veže"
        applicationIdSuffix ".dev"
      }
    }
    lint {
      checkReleaseBuilds false
    }
    namespace 'sk.bottleshop3veze.bottleshopdeliveryapp'
}

flutter {
    source '../..'
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'com.google.firebase:firebase-appcheck-debug:16.0.0'
}
