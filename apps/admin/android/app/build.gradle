plugins {
  id "com.android.application"
  id "kotlin-android"
  id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader('UTF-8') { reader ->
    localProperties.load(reader)
  }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
  flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
  flutterVersionName = '1.0'
}


def _compileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')
if (_compileSdkVersion == null) {
  _compileSdkVersion = 34
}

def _minSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (_minSdkVersion == null) {
  _minSdkVersion = 26
}

def _targetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')
if (_targetSdkVersion == null) {
  _targetSdkVersion = 34
}

android {
  namespace "sk.bottleshop3veze.bottleshopAdmin"
  compileSdkVersion _compileSdkVersion.toInteger()
  ndkVersion flutter.ndkVersion

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

  defaultConfig {
    applicationId "sk.bottleshop3veze.bottleshopAdmin"
    minSdkVersion _minSdkVersion
    targetSdkVersion _targetSdkVersion
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
  }

  signingConfigs {
    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('key.properties')
    if (keystorePropertiesFile.exists()) {
      keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }  else {
      keystoreProperties.setProperty('storePassword', System.getenv('STORE_PWD'))
      keystoreProperties.setProperty('keyAlias', System.getenv('KEY_ALIAS'))
      keystoreProperties.setProperty('keyPassword', System.getenv('STORE_PWD'))
      keystoreProperties.setProperty('storeFile', System.getenv('STORE_PATH'))

    }

    release {
      keyAlias keystoreProperties['keyAlias']
      storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
      storePassword keystoreProperties['storePassword']
      keyPassword keystoreProperties['keyPassword']
    }
  }

  flavorDimensions "default"
  productFlavors {
    production {
      dimension "default"
      applicationIdSuffix ""
      manifestPlaceholders = [appName: "Bottleshop Admin"]
    }
    development {
      dimension "default"
      applicationIdSuffix ".dev"
      manifestPlaceholders = [appName: "[DEV] Bottleshop Admin"]
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }
}

flutter {
  source '../..'
}

dependencies {}
